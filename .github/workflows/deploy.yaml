name: DEPLOY

on:
  push:
    branches: 
      - main

jobs:
  deploy:
    name: deploy
    environment:
      name: main
    runs-on: ubuntu-latest
    env:
      CDK_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      CDK_DEFAULT_ACCOUNT: ${{ vars.CDK_DEFAULT_ACCOUNT }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
    
      - name: Install CDK dependencies
        run: |
          cd deploy && npm install

      - name: CDK Deploy
        run: |
          cd deploy && npm run cdk deploy -- --all --require-approval never

      - name: Deploy React app to EC2
        run: |
          # Get instance ID from SSM Parameter 
          INSTANCE_ID=$(aws ssm get-parameter --name "/webapp/webapp-ec2-instance-id" --query "Parameter.Value" --output text)
          echo "Retrieved instance ID: $INSTANCE_ID"
          
          # Build the React app
          echo "Current directory: $(pwd)"
          cd src/webapp
          echo "Changed to src/webapp directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          
          # Install dependencies
          echo "Installing dependencies..."
          npm ci
          
          # Build the app
          echo "Building React app..."
          npm run build
          
          echo "Build completed. Directory contents:"
          ls -la
          
          echo "Build directory contents:"
          ls -la build || echo "Build directory not found!"
          
          # Create a deployment package
          echo "Creating deployment package..."
          # Only cd into build if it exists
          if [ -d "build" ]; then
            cd build
            echo "In build directory: $(pwd)"
            zip -r ../../../webapp.zip .
            echo "Zip file created at ../../../webapp.zip"
          else
            echo "ERROR: build directory not found. Check the build output above for errors."
            exit 1
          fi
          
          # Rest of your deployment steps...
          # Upload directly to the EC2 instance using SSM
          echo "Preparing EC2 instance via SSM..."
          aws ssm send-command \
            --instance-ids $INSTANCE_ID \
            --document-name "AWS-RunShellScript" \
            --parameters commands=[
              "mkdir -p /tmp/webapp",
              "mkdir -p /var/www/html",
              "systemctl start httpd || true",
              "systemctl enable httpd || true"
            ]
          
          # Create a unique bucket name using instance ID
          BUCKET_NAME="temp-webapp-deployment-$(echo $INSTANCE_ID | tr -d '-')"
          echo "Using S3 bucket: $BUCKET_NAME"
          
          # Use AWS S3 as an intermediary for the file transfer
          echo "Creating/using S3 bucket..."
          aws s3 mb s3://$BUCKET_NAME --region ${{ vars.AWS_DEFAULT_REGION }} || true
          
          echo "Uploading webapp.zip to S3..."
          cd ../../../  # Return to root directory
          aws s3 cp webapp.zip s3://$BUCKET_NAME/webapp.zip
          
          # Use SSM to download and deploy the app
          echo "Deploying app to EC2 via SSM..."
          aws ssm send-command \
            --instance-ids $INSTANCE_ID \
            --document-name "AWS-RunShellScript" \
            --parameters commands=[
              "aws s3 cp s3://$BUCKET_NAME/webapp.zip /tmp/webapp.zip",
              "cd /tmp && unzip -o webapp.zip -d webapp",
              "cp -r /tmp/webapp/* /var/www/html/",
              "systemctl restart httpd || echo 'Failed to restart httpd'"
            ]
          
          echo "Deployment complete!"